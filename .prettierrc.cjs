// Prettierの設定ファイルをエクスポート
// Prettierはコードフォーマッターで、コードのスタイルを統一するために使用されます
module.exports = {
  // アロー関数の引数に常に括弧を使用する設定
  // 例: (x) => x
  // この設定により、引数が1つでも括弧を付けることで一貫性を保ちます
  arrowParens: 'always',

  // オブジェクトリテラルの括弧内にスペースを入れる設定
  // 例: { foo: bar }
  // この設定により、オブジェクトリテラルの読みやすさが向上します
  bracketSpacing: true,

  // 改行コードをLFに統一する設定
  // Unix系OSで一般的なLFを使用
  // この設定により、異なるOS間での改行コードの違いによる問題を防ぎます
  endOfLine: 'lf',

  // 1行の最大文字数を設定
  // 120文字を超えると改行
  // この設定により、コードの可読性を保ちます
  printWidth: 120,

  // ステートメントの末尾にセミコロンを追加する設定
  // 例: const x = 1;
  // この設定により、セミコロンの有無によるエラーを防ぎます
  semi: true,

  // シングルクォートを使用する設定
  // 例: 'string'
  // この設定により、文字列リテラルの一貫性を保ちます
  singleQuote: true,

  // インデントのスペース数を設定
  // 2スペースでインデント
  // この設定により、コードのインデントが統一されます
  tabWidth: 2,

  // 末尾のカンマを常に追加する設定
  // 例: { foo: bar, }
  // この設定により、オブジェクトや配列の変更時に差分が最小限に抑えられます
  trailingComma: 'all',

  // スペースでインデントする設定
  // タブではなくスペースを使用
  // この設定により、インデントが統一され、異なるエディタ間での表示が一貫します
  useTabs: false,
};
