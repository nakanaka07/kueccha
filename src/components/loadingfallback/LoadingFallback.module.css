/* LoadingFallback.module.css - ローディングインジケーターコンポーネントのスタイル */

/* ローディングコンテナの基本スタイル */
.loadingFallback {
  position: fixed;
  inset: 0;
  display: flex;
  justify-content: center;
  align-items: flex-end;
  width: 100%;
  height: 100%;
  z-index: 1000;

  /* 背景スタイル */
  background-color: var(--color-primary-light);
  background-image: url('../../utils/images/row1.png');
  background-size: contain;
  background-position: center;
  background-repeat: no-repeat;

  /* トランジション効果 */
  opacity: 1;
  will-change: opacity;
  /* パフォーマンス最適化 */
  transition: opacity 300ms ease-in;
}

/* フェードアウト効果 */
.loadingFallback.fading {
  animation: fadeOut 3s ease-in forwards;
}

/* コンテンツコンテナ */
.loadingContent {
  text-align: center;
  padding: 1.25rem;
  color: var(--text-color);
  font-size: 1.5rem;
  margin-bottom: 6.25rem;
  animation: fadeIn 0.5s ease-in;
}

/* エラーコンテナ */
.errorContainer {
  background-color: var(--error-bg);
  color: var(--error-text);
  border: 1px solid var(--error-border);
  border-radius: 4px;
  padding: 1rem;
  margin: 1rem 0;
}

/* エラーアイコン */
.errorIcon {
  width: 3rem;
  height: 3rem;
  margin: 0 auto 1rem;
  border-radius: 50%;
  background-color: var(--error-color);
  position: relative;
}

.errorIcon::before,
.errorIcon::after {
  content: '';
  position: absolute;
  background-color: white;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.errorIcon::before {
  width: 0.25rem;
  height: 1.5rem;
  border-radius: 0.125rem;
}

.errorIcon::after {
  width: 0.25rem;
  height: 0.25rem;
  border-radius: 50%;
  transform: translate(-50%, 80%);
}

/* 再試行ボタン */
.retryButton {
  background-color: var(--error-color);
  color: white;
  border: none;
  border-radius: 4px;
  padding: 0.5rem 1rem;
  font-size: 1rem;
  cursor: pointer;
  margin-top: 1rem;
  transition: background-color 0.2s ease;
}

.retryButton:hover {
  background-color: var(--error-hover);
}

.retryButton:focus,
.retryButton:focus-visible {
  outline: var(--focus-outline-width) solid var(--focus-outline-color);
  outline-offset: var(--focus-outline-offset);
}

/* スケルトンコンテナ */
.skeletonContainer {
  width: 100%;
  max-width: 500px;
  padding: 1rem;
  background-color: var(--bg-color);
  border-radius: 8px;
}

/* プログレスコンテナ */
.progressContainer {
  width: 100%;
  max-width: 300px;
}

/* プログレスバー */
.progressBar {
  width: 100%;
  height: 8px;
  background-color: var(--color-bg-light);
  border-radius: 4px;
  overflow: hidden;
  margin-bottom: 1rem;
}

.progressIndicator {
  height: 100%;
  background-color: var(--primary-color);
  width: 30%;
  border-radius: 4px;
  animation: progress 2s ease-in-out infinite;
}

/* オーバーレイスタイル */
.overlay {
  background-color: rgba(0, 0, 0, 0.7);
}

/* 視覚的に隠し、スクリーンリーダーからのみアクセス可能 */
.visuallyHidden {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
}

/* アニメーション定義 */
@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(10px);
  }

  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeOut {
  from {
    opacity: 1;
  }

  to {
    opacity: 0;
  }
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(360deg);
  }
}

@keyframes progress {
  0% {
    width: 0%;
    transform: translateX(-100%);
  }

  50% {
    width: 70%;
  }

  100% {
    width: 100%;
    transform: translateX(100%);
  }
}

/* アクセシビリティの向上 */
@media (prefers-reduced-motion: reduce) {

  .loadingFallback,
  .loadingContent,
  .progressIndicator {
    transition: none;
    animation: none;
  }

  .loadingFallback.fading {
    opacity: 0;
  }
}

/* ダークモード対応 */
@media (prefers-color-scheme: dark) {
  .loadingFallback {
    background-color: var(--color-primary-dark);
  }

  .skeletonContainer {
    background-color: var(--light-gray);
  }

  .progressBar {
    background-color: var(--border-color);
  }

  .retryButton {
    background-color: var(--error-color);
  }

  .retryButton:hover {
    background-color: var(--error-hover);
  }
}

/* 高コントラストモードのサポート */
@media (forced-colors: active) {
  .retryButton {
    border: 1px solid CanvasText;
  }
}