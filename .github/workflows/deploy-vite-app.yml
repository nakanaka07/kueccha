name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

# 並列ビルドを防止
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        # 最初に --no-frozen-lockfile でロックファイルを更新し、それから通常のインストールを実行
        run: |
          pnpm install --no-frozen-lockfile
          pnpm install

      # リポジトリ名から動的にBASE_PATHを設定
      - name: Extract repository name
        id: repo-name
        run: |
          REPO_NAME=${GITHUB_REPOSITORY#*/}
          echo "name=$REPO_NAME" >> $GITHUB_OUTPUT
          echo "リポジトリ名 '$REPO_NAME' からベースパスを設定: /$REPO_NAME/"

      - name: Build
        env:
          # Google API関連設定
          VITE_GOOGLE_API_KEY: ${{ secrets.VITE_GOOGLE_API_KEY }}
          VITE_GOOGLE_MAPS_MAP_ID: ${{ secrets.VITE_GOOGLE_MAPS_MAP_ID }}
          VITE_GOOGLE_SPREADSHEET_ID: ${{ secrets.VITE_GOOGLE_SPREADSHEET_ID }}
          
          # EmailJS関連設定
          VITE_EMAILJS_SERVICE_ID: ${{ secrets.VITE_EMAILJS_SERVICE_ID }}
          VITE_EMAILJS_TEMPLATE_ID: ${{ secrets.VITE_EMAILJS_TEMPLATE_ID }}
          VITE_EMAILJS_PUBLIC_KEY: ${{ secrets.VITE_EMAILJS_PUBLIC_KEY }}
          
          # PWA設定
          VITE_APP_NAME: '佐渡で食えっちゃ'
          VITE_APP_SHORT_NAME: '食えっちゃ'
          VITE_APP_DESCRIPTION: '佐渡島内の飲食店、駐車場、公共トイレの位置情報を網羅。快適な佐渡の旅をサポートします。'
          
          # GitHub Pages ベースパス - リポジトリ名から動的に設定
          BASE_PATH: /${{ steps.repo-name.outputs.name }}/
        run: pnpm build

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4